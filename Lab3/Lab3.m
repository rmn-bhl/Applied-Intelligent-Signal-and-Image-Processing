%% 0. Підготовка середовища
clear; close all; clc;

%% Завдання 1: Завантажити з бібліотеки MATLAB тестове зображення
% Використаємо onion.png (кольорове зображення).
I = imread('onion.png');

%% Завдання 2: Відобразити вихідне зображення на екрані ПК
figure;
imshow(I);
title('Вихідне зображення (onion.png)');

%% Завдання 3: Здійснити процедуру перекручення зображення, змінюючи параметри LEN і THETA
% "Перекручення" в контексті завдання — це імітація рухомої розмитості (motion blur).
% LEN — приблизна довжина розмиття (кількість пікселів), THETA — кут (в градусах).

LEN = 21;     % Довжина змазування
THETA = 30;   % Кут змазування
PSF = fspecial('motion', LEN, THETA);  
% PSF (Point Spread Function) — ядро згортки, що відповідає розмиттю під час руху.

% Виконуємо згортку зображення з PSF:
blurred = imfilter(I, PSF, 'conv', 'circular');
% 'conv' означає згортку, 'circular' — граничні умови (зображення повторюється циклічно).

%% Завдання 4: Відобразити перекручене (змазане) зображення
figure;
imshow(blurred);
title('Змазане (перекручене) зображення');

%% Завдання 5: Виконати процедуру відновлення зображення
% Використовуємо метод Вінера (Wiener) через функцію deconvwnr.
% Якщо шум не враховується (ідеальне відновлення без шуму), можна вказати NSR=0.
wnr1 = deconvwnr(blurred, PSF, 0);  
% Тут 0 означає, що шуму немає або він дуже малий (NSR=0).

%% Завдання 6: Відобразити зображення після відновлення
figure;
imshow(wnr1);
title('Відновлене (деblurred) зображення без урахування шуму');

%% Завдання 7: Виконати зашумлення початкового зображення та повторити пункти 2-6
% 7.1. Додаємо шум до вихідного зображення (гаусівський шум)
noisy = imnoise(I, 'gaussian', 0, 0.01);  
% Параметри (0, 0.01) відповідають середньому 0 і дисперсії 0.01.

% Відобразимо зашумлене вихідне зображення
figure;
imshow(noisy);
title('Зашумлене вихідне зображення (гаусівський шум)');

% 7.2. Перекручуємо (змазуємо) вже зашумлене зображення тим же PSF
noisy_blurred = imfilter(noisy, PSF, 'conv', 'circular');

% Відображення перекрученого зашумленого зображення
figure;
imshow(noisy_blurred);
title('Перекручене (змазане) і зашумлене зображення');

% 7.3. Відновлюємо зашумлене і перекручене зображення
% Для урахування шуму потрібно задати NSR (Noise-to-Signal Ratio).
% Тут умовно вказуємо NSR=0.01 (експериментально можна змінювати).
wnr2 = deconvwnr(noisy_blurred, PSF, 0.01);

% Відображення відновленого зашумленого перекрученого зображення
figure;
imshow(wnr2);
title('Відновлене (деblurred) зашумлене і перекручене зображення');

%% Додаткові пояснення:
% 1) Модель формування змазаного зображення можна описати як:
%       blurred = conv(I, PSF) + noise
%    де I — оригінал, PSF — функція розсіювання точки (motion blur),
%    noise — адитивний шум.
% 2) "len" і "theta" визначають параметри розмиття (довжина та кут).
% 3) Без шуму (NSR=0) метод deconvwnr робить зворотну згортку, але якщо шум є,
%    потрібно враховувати співвідношення сигнал/шум (NSR).
% 4) При завищеному NSR відновлене зображення стає більш "гладким";
%    при заниженому NSR може підсилюватися шум.
disp('--- Завдання виконано успішно ---');
